<?php

/**
 * Test class for S2Dao_PagerUtil.
 * Generated by PHPUnit2_Util_Skeleton on 2006-07-10 at 01:14:11.
 */
class S2Dao_PagerUtilTest extends PHPUnit2_Framework_TestCase {

    private $condition = null;

    public static function main() {
        $suite  = new PHPUnit2_Framework_TestSuite("S2Dao_PagerUtilTest");
        $result = PHPUnit2_TextUI_TestRunner::run($suite);
    }

    protected function setUp() {
        $this->condition = new S2Dao_DefaultPagerCondition();
    }

    protected function tearDown() {
        $this->condition = null;
    }

    public function testFilter() {
        $array = array('aaa', 'bbb', 'ccc', 'ddd', 'eee');
        $filter_array = arrary('ccc', 'ddd', 'eee');
        
        $this->condition->setLimit(3);
        $this->condition->setOffset(2);
        
        $array = S2Dao_PagerUtil::filter($array, $this->condition);
        
        $this->assertEquals($array, $filter_array);
    }

    public function testFilterS2Dao_ArrayList() {
        $array_data = array('aaa', 'bbb', 'ccc', 'ddd', 'eee');
        $filter_array_data = arrary('ccc', 'ddd', 'eee');
        $list = new S2Dao_ArrayList(new ArrayObject($array_data));
        $filter_list = new S2Dao_ArrayList(new ArrayObject($filter_array_data));

        $this->condition->setLimit(3);
        $this->condition->setOffset(2);
        
        $list = S2Dao_PagerUtil::filter($list, $this->condition);
        
        $this->assertEquals($list, $filter_list);
    }

    public function testFilterJson() {
        $json = '["aaa", "bbb", "ccc", "ddd", "eee"]';
        $filter_json = '["ccc", "ddd", "eee"]';
        
        $this->condition->setLimit(3);
        $this->condition->setOffset(2);

        $json = S2Dao_PagerUtil::filterJson($json, $this->condition);

        $this->assertEquals($json, $filter_json);
    }

    public function testFilterYaml() {
        $yaml = '';
        $filter_yaml = '';

        $this->condition->setLimit(3);
        $this->condition->setOffset(2);

        $yaml = S2Dao_PagerUtil::filterYaml($yaml, $this->condition);

        $this->assertEquals($yaml, $filter_yaml);
    }
}

?>